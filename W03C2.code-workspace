{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		"textmarker.savedHighlights": [
			{
				"pattern": {
					"type": "string",
					"expression": "//saveRoundData -- Callback function called from logRoundForm's submit handler.\r\n//Stops the spinner and then saves the entered round data to local storage.\r\nfunction saveRoundData() {\r\n\r\n  //Stop spinner\r\n  document.getElementById(\"saveIcon\").classList.remove(\"fas\", \"fa-spinner\", \"fa-spin\");\r\n  \r\n  //Retrieve from localStorage this user's rounds and roundCount\r\n  let thisUser = localStorage.getItem(\"userName\");\r\n  let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n   \r\n  //Initialize empty JavaScript object to store new or updated round\r\n  let thisRound = {}; //iniitalize empty object for this round\r\n  let temp; //temporary value for storying DOM elements as needed\r\n\r\n  //Store the data\r\n  thisRound.date = document.getElementById(\"roundDate\").value; //round date\r\n  thisRound.course = document.getElementById(\"roundCourse\").value;\r\n  temp = document.getElementById(\"roundType\");\r\n  thisRound.type = temp.options[temp.selectedIndex].value;\r\n  temp = document.getElementById(\"roundHoles\");\r\n  thisRound.numHoles = temp.options[temp.selectedIndex].value;\r\n  thisRound.strokes = document.getElementById(\"roundStrokes\").value;\r\n  thisRound.minutes = document.getElementById(\"roundMinutes\").value;\r\n  thisRound.seconds = document.getElementById(\"roundSeconds\").value;\r\n  thisRound.SGS = document.getElementById(\"roundSGS\").value;\r\n  thisRound.notes = document.getElementById(\"roundNotes\").value;\r\n\r\n  //Determine whether we're saving new or editing existing round, saving accordingly\r\n  let submitBtnLabel = document.getElementById(\"submitBtnLabel\").textContent;\r\n  let addNew;\r\n\r\n  if (submitBtnLabel == \"Save Round Data\") {\r\n    //Adding new round\r\n    addNew = true;\r\n    //Add 1 to roundCount, setting thisRound's roundNum to that value\r\n    thisRound.roundNum = ++(data[thisUser].roundCount);\r\n    data[thisUser].rounds[thisRound.roundNum] = thisRound; //add to local storage \r\n  } else {\r\n    //Editing existing round\r\n    addNew = false;\r\n    //Grab index of round being edited from localStorage. It was set in editRound()\r\n    thisRound.roundNum = Number(localStorage.getItem(\"roundIndex\")); \r\n  }\r\n\r\n  //Add this round to associative array of rounds\r\n  data[thisUser].rounds[thisRound.roundNum] = thisRound;\r\n\r\n  //Commit updated user data to app data in local storage\r\n  localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n\r\n  //Go back to \"My Rounds\" page by programmatically clicking the menu button\r\n  document.getElementById(\"menuBtn\").click();\r\n\r\n  //Clear form to ready for next use\r\n  clearRoundForm();\r\n\r\n  //Add to or update \"My Rounds\" table\r\n  addToOrUpdateRoundTable(addNew, thisRound.roundNum);\r\n\r\n}",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "//addToOrUpdateRoundTable -- Helper function that adds a new round with unique index\r\n//roundIndex to the \"My Rounds\" table. The round is a \"condensed view\" that\r\n//shows only the date, course and score for the round, together with buttons to\r\n//view/edit the detailed round data and delete the round data.\r\nfunction addToOrUpdateRoundTable(add, roundIndex) {\r\n  let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n  let user = localStorage.getItem(\"userName\");\r\n  let roundData = data[user].rounds[roundIndex]; //the round data to add/edit\r\n  let roundsTable = document.getElementById(\"myRoundsTable\");\r\n  let roundRow;\r\n  if (add) { //add new row\r\n    //Test whether table is empty\r\n    if (roundsTable.rows[1].innerHTML.includes (\"colspan\")) {\r\n      //empty table! Need to remove this row before adding new one\r\n      roundsTable.deleteRow(1);\r\n     }\r\n     roundRow = roundsTable.insertRow(1); //insert new row\r\n     roundRow.id = \"r-\" + roundIndex; //set id of this row so we can edit/delete later per user input\r\n  } else { //update existing row\r\n    roundRow = document.getElementById(\"r-\" + roundIndex);\r\n  }\r\n  //Add/update row with five cols to table\r\n  roundRow.innerHTML = \"<td>\" + roundData.date + \"</td><td>\" +\r\n   roundData.course + \"</td><td>\" + roundData.SGS + \r\n   \" (\" + roundData.strokes +\r\n   \" in \" + roundData.minutes + \":\" + roundData.seconds + \r\n   \")</td>\" +\r\n   \"<td><button onclick='editRound(\" + roundIndex + \")'><span class='fas fa-eye'>\" +\r\n   \"</span>&nbsp;<span class='fas fa-edit'></span></button></td>\" +\r\n   \"<td><button onclick='confirmDelete(\" + roundIndex + \")'>\" +\r\n   \"<span class='fas fa-trash'></span></button></td>\";\r\n}",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			}
		]
	}
}